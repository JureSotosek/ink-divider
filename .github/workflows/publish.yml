name: 🚀 Release + Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. 1.2.3)'
        required: false

permissions:
  id-token: write
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
      attestations: write

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Required for fetching tags and generating release notes
          fetch-depth: 0

      - name: 🔧 Setup Bun
        uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2
        with:
          bun-version-file: ".bun-version"

      - name: ⚡ Cache Bun dependencies
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: |
            ~/.bun/install/cache
          key: bun-cache-${{ hashFiles('**/bun.lock') }}

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🔧 Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global push.followTags true

      - name: 🚀 Prepare release
        run: bun run preversion

      - name: 📜 Generate changelog and release notes
        env:
          VERSION: ${{ github.event.inputs.version }}
        run: |
          bunx changelogen --release --push -r $VERSION
          bunx changelogen github release --token ${{ secrets.GITHUB_TOKEN }} -r $VERSION

      - name: 🛠️ Build package
        run: bun run build

      - name: 📦 Publish to NPM Registry
        run: |
          bunx npm set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"
          bunx npm publish --provenance --access public
